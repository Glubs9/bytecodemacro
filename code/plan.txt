todo:
	- code re-use is atrocious rn cause i don't know how to ipmort from a different file
		- have figured this out but now i just need to implement it
		- noticably in the cpyasm, look more into that (specifically the intermingling of parse and pre_process)
	- lmao i still don't know how freevars work
		- turns out that i am not detecting inner functions rn, i should do this later
	- I NEED TO REFACTOR 
		- check out string getting sent
		- maybe not use dis to parse?
		- see something about 
	- check that (end, 0) isn't causing any errors
	- make into a real python module installable through pip
	- also write documentation for cpyasm and tuples for macros

what makes this different?
	- python bytecode rather than an ast

example ideas
	- run time enforcement of private functions
		- this is kinda end level type shit cause how sick would that be
		- wouldn't be too hard but i would have to introduce a whole file of macros
			- running a macro on a file
	- amb
		- maybe call/cc first
